[project]
name = "bedrock-kb-mcp"
version = "1.0.0"
description = "MCP server for Amazon Bedrock Knowledge Base with CRUD operations"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Bedrock KB MCP Development Team" }]

dependencies = [
    "mcp>=1.12.0",
    "boto3>=1.35.0",
    "pyyaml>=6.0.1",
    "aiofiles>=24.1.0",
    "python-magic>=0.4.27",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-pyyaml>=6.0.0",
    "bandit>=1.7.0",
    "safety>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "src/**/*.py",
    "README.md",
    "LICENSE",
    "config.yaml",
]

[project.scripts]
bedrock-kb-mcp = "bedrock_kb_mcp.server:main"

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.isort]
known-first-party = ["bedrock_kb_mcp"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'